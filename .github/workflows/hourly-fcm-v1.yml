name: fcm-token-test

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/3 * * * *"

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm i google-auth-library node-fetch@2

      - name: Send silent push directly to token
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          TARGET_FCM_TOKEN: "all"
        run: |
          node <<'NODE'
          const {GoogleAuth} = require('google-auth-library');
          const fetch = require('node-fetch');

          const creds = JSON.parse(process.env.GOOGLE_APPLICATION_CREDENTIALS_JSON);
          const projectId = process.env.FIREBASE_PROJECT_ID;
          const targetToken = process.env.TARGET_FCM_TOKEN;

          (async () => {
            const auth = new GoogleAuth({
              credentials: creds,
              scopes: ['https://www.googleapis.com/auth/firebase.messaging']
            });
            const client = await auth.getClient();
            const token = await client.getAccessToken();

            const url = `https://fcm.googleapis.com/v1/projects/${projectId}/messages:send`;
            const body = {
              message: {
                token: targetToken,
                apns: {
                  headers: {
                    "apns-push-type": "background",
                    "apns-priority": "5"
                  },
                  payload: { aps: { "content-available": 1 } }
                },
                data: { type: "widget_weather_refresh" }
              }
            };

            const res = await fetch(url, {
              method: 'POST',
              headers: {
                Authorization: `Bearer ${token.token || token}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(body)
            });

            console.log('Status:', res.status);
            console.log('Response:', await res.text());
          })().catch(e => { console.error(e); process.exit(1); });
          NODE
